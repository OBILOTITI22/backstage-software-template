name: ${{ values.app_name }}-cicd

on:
  push:
    paths:
      - src/**
    branches:
      - master

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Shorten commit id
        shell: bash
        run: |
          echo "COMMIT_ID=${GITHUB_SHA::6}" >> "$GITHUB_ENV"
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ '${{ secrets.DOCKERHUB_USERNAME }}' }}
          password: ${{ '${{ secrets.DOCKERHUB_TOKEN }}' }}
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: obilotiti/${{ values.app_name }}:${{ '${{ env.COMMIT_ID }}' }}
    outputs:
      commit_id: ${{ '${{ env.COMMIT_ID }}' }}

  cd:
    needs: ci
    runs-on: self-hosted
    steps:

      - uses: actions/checkout@v4

      - name: Modify values file
        shell: bash
        run: |
          echo ${{ '${{needs.ci.outputs.commit_id}}' }}
          pip install yq
          yq -Yi '.image.tag = "${{'${{needs.ci.outputs.commit_id}}' }}"' charts/${{values.app_name}}/values-${{values.app_env}}.yaml

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Updates values.yaml with commit ${{ '${{needs.ci.outputs.commit_id}}' }}'

      - name: Install argocd
        shell: bash
        run: |
          curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv argocd /usr/local/bin/

      - name: argocd login
        shell: bash
        run: |
          # Uses existing kubeconfig on the self-hosted runner
          if kubectl get svc argocd-server -n argocd &> /dev/null; then
            ARGOSRV="argocd-server.argocd.svc.cluster.local"
          else
            ARGOSRV="argocd-server.argocd"
          fi
          argocd login "$ARGOSRV" \
            --insecure \
            --grpc-web \
            --username admin \
            --password "${{ secrets.ARGOCD_PASSWORD }}"

      - name: Ensure argocd repo and app
        shell: bash
        run: |

          # Connects the argocd repo
          repo="https://github.com/obilotiti-com/${{values.app_name}}.git"
          argocd repo list | grep -q $repo || argocd repo add $repo

          # Creates the argocd app
          argocd app get ${{values.app_name}} || argocd app create ${{values.app_name}} \
            --repo $repo \
            --path charts/${{values.app_name}} \
            --dest-namespace ${{values.app_env}} \
            --dest-server https://kubernetes.default.svc \
            --values values-${{values.app_env}}.yaml \
            --revision master \
            --sync-policy manual \
            --sync-option CreateNamespace=true

      - name: Argocd app sync
        shell: bash
        run: |
          argocd app sync ${{values.app_name}}
          argocd app wait ${{values.app_name}} --timeout 180